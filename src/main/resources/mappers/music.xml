<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Music.Group.Repository.MusicRepository">
    <insert id="musicAdd" parameterType="com.Music.Group.Domain.Music">
        INSERT INTO
            music_mst
        VALUES(
            0,
            #{username},
            #{title},
            #{singer},
            #{info},
            #{url},
            #{category_id},
            #{gender_id},
            #{genre_id},
            #{season_id},
            now(),
            now()
            )
    </insert>
    <insert id="musicLike">
        INSERT INTO
            like_mst
        VALUES(
            0,
            #{username},
            #{musicId},
            now()
            )
    </insert>
    <update id="musicUpdate">
        update
            music_mst
        set
            title = #{title},
            singer = #{singer},
            info = #{info},
            url = #{url},
            category_id = #{category_id},
            gender_id = #{gender_id},
            genre_id = #{genre_id},
            season_id = #{season_id},
            update_date = now()
        where
            id = #{id}
    </update>
    <delete id="musicDelete">
        delete from
            music_mst
        where
            id = #{musicId}
    </delete>
    <delete id="musicDisLike">
        delete from
            like_mst
        where
            username = #{username}
                and
            music_id = #{musicId}
    </delete>
    <select id="getCategoryOptions" resultType="com.Music.Group.Domain.SelectOption">
        select
            id, name
        from
            category
    </select>
    <select id="getGenderOptions" resultType="com.Music.Group.Domain.SelectOption">
        select
            id, name
        from
            gender
    </select>
    <select id="getGenreOptions" resultType="com.Music.Group.Domain.SelectOption">
        select
            id, name
        from
            genre
    </select>
    <select id="getSeasonOptions" resultType="com.Music.Group.Domain.SelectOption">
        select
            id, name
        from
            season
        order by
            id
    </select>
    <select id="getMusicList" resultType="com.Music.Group.Domain.Music">
        select
            mm.id,
            mm.title,
            mm.singer,
            mm.url,
            category.name AS category_name,
            gender.name AS gender_name,
            genre.name AS genre_name,
            season.name AS season_name
        from
            music_mst mm
            LEFT OUTER JOIN category ON(category.id = mm.category_id)
            LEFT OUTER JOIN gender ON(gender.id = mm.gender_id)
            LEFT OUTER JOIN genre ON(genre.id = mm.genre_id)
            LEFT OUTER JOIN season ON(season.id = mm.season_id)
        where
            1 = 1
            <if test='categoryId != 0'>
                and
                category.id = #{categoryId}
            </if>
            <if test='genderId != 0'>
                and
                gender.id = #{genderId}
            </if>
            <if test='genreId != 0'>
                and
                genre.id = #{genreId}
            </if>
            <if test='seasonId != 0'>
                and
                season.id = #{seasonId}
            </if>


    </select>
    <select id="getMusicTypeList" resultType="com.Music.Group.Domain.Music">
        select
            mm.id,
            mm.title,
            mm.singer,
            mm.url,
            category.name AS category_name,
            gender.name AS gender_name,
            genre.name AS genre_name,
            season.name AS season_name
        from
            music_mst mm
            LEFT OUTER JOIN category ON(category.id = mm.category_id)
            LEFT OUTER JOIN gender ON(gender.id = mm.gender_id)
            LEFT OUTER JOIN genre ON(genre.id = mm.genre_id)
            LEFT OUTER JOIN season ON(season.id = mm.season_id)
        where
            1 = 1
            <choose>
                <when test='type == "category"'>
                    and mm.category_id = (SELECT id FROM category WHERE category.name = #{value})
                </when>
                <when test='type == "gender"'>
                    and mm.gender_id = (SELECT id FROM gender WHERE gender.name = #{value})
                </when>
                <when test='type == "genre"'>
                    and mm.genre_id = (SELECT id FROM genre WHERE genre.name = #{value})
                </when>
                <when test='type == "season"'>
                    and mm.season_id = (SELECT id FROM season WHERE season.name = #{value})
                </when>
            </choose>
    </select>
    <select id="getMusicPost" resultType="com.Music.Group.Domain.Music">
        SELECT
            id,
            username,
            title,
            singer,
            info,
            url,
            category_id,
            gender_id,
            genre_id,
            season_id
        FROM
            music_mst
        WHERE
            id = #{musicId}
    </select>
    <select id="musicLikeState" resultType="java.lang.Integer">
        SELECT
            *
        FROM
            like_mst
        WHERE
            username = #{username}
                and
            music_id = #{musicId}
    </select>
</mapper>