<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Music.Group.Repository.AccountRepository">
    <resultMap id="role" type="com.Music.Group.Domain.Role">
        <result property="id" column="id"/>
        <result property="name" column="role_name"/>
        <result property="create_date" column="create_date"/>
        <result property="update_date" column="update_date"/>
    </resultMap>

    <resultMap id="user" type="com.Music.Group.Domain.User">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="role_id" column="role_id"/>
        <result property="create_date" column="create_date"/>
        <result property="update_date" column="update_date"/>

        <collection property="role" resultMap="role"/>
    </resultMap>

    <select id="findUserByUsername" parameterType="String" resultMap="user">
        SELECT
            um.id,
            um.username,
            um.password,
            um.role_id,
            rm.name AS role_name,
            um.create_date,
            um.update_date
        FROM
            user_mst um
            LEFT OUTER JOIN role_mst rm ON(rm.id = um.role_id)
        WHERE
            um.username = #{username}

    </select>
    <insert id="saveUser"
            parameterType="com.Music.Group.Domain.User"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into
            user_mst
        values(
            0,
            #{username},
            #{password},
            1,
            now(),
            now()
        )
    </insert>
    <select id="getUserInfoList" resultType="com.Music.Group.Domain.Music">
        select
            mm.id,
            mm.username,
            mm.title,
            mm.singer,
            mm.url,
            category.name AS category_name,
            gender.name AS gender_name,
            genre.name AS genre_name,
            season.name AS season_name
        from
            music_mst mm
            LEFT OUTER JOIN category ON(category.id = mm.category_id)
            LEFT OUTER JOIN gender ON(gender.id = mm.gender_id)
            LEFT OUTER JOIN genre ON(genre.id = mm.genre_id)
            LEFT OUTER JOIN season ON(season.id = mm.season_id)
        where
            username = #{username}
    </select>
    <select id="getUserLikeList" resultType="com.Music.Group.Domain.Music">
        SELECT
            mm.id,
            mm.title,
            mm.singer,
            mm.url,
            category.name AS category_name,
            gender.name AS gender_name,
            genre.name AS genre_name,
            season.name AS season_name
        FROM
            music_mst mm
            LEFT OUTER JOIN category ON(category.id = mm.category_id)
            LEFT OUTER JOIN gender ON(gender.id = mm.gender_id)
            LEFT OUTER JOIN genre ON(genre.id = mm.genre_id)
            LEFT OUTER JOIN season ON(season.id = mm.season_id)
            LEFT OUTER JOIN like_mst ON (like_mst.username = mm.username)
        WHERE
            mm.username = #{username} AND mm.id = like_mst.music_id
    </select>

</mapper>